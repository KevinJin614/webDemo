Servlet
	sun公司在jdk1.2时开发的一种用于扩展web服务器功能的一种组件技术
	该组件要求实现Servlet接口，并且符合Servlet规范的
	，放在符合Servlet规范的web服务器中运行

组件
	按照特定规范开发的程序
	该程序不需要考虑一些基础服务
	（网络通信问题，多线程，xml文件解析）
	只需要实现业务逻辑

容器
	也是一个按照特定规范开发的程序
	实现了基础服务，并提供了组件的运行环境

组件+容器
	优点
		1.简化开发，因为基础服务代码不需要再写了（容器已经实现）
		2.组件不需要依赖于特定的容器，只需要提供一个符合规范的任意容器就能运行


tomcat
	开源的免费的Servlet容器，它实现了web服务器的大部分功能

	安装
		解压
		配置环境变量
			JAVA_HOME:jdk安装目录
			CATALINA_HOME:tomcat安装目录


		启动服务器
			catalina.sh run
			catalina.bat run
		
		停止服务器
			shutdown.bat
			shutdown.sh

		访问
			浏览器地址栏输入
				http://ip:端口号


开发Servlet
	写一个java类，实现Servlet接口或者继承HttpServlet

	编译（需要依赖servlet-api.jar）

	定义一个目录结构
		appname（应用名）
			WEB-INF(必须是这个名字，大小写一致)
				classes（存放字节码文件，包括包）
				lib（存放第三方jar包）
				web.xml
			公开资源
	
	部署
		将目录拷贝到tomcat的webapps下

	访问
		http://ip:port/appname/配置的url-pattern

HttpServletRequest 请求
HttpServletResponse 响应


Servlet运行过程
	浏览器发送请求到达服务器
	服务器会将请求中的数据打包成一个请求对象（HttpServletRequest接口的实现类的一个实例）
	同时还会创建一个响应对象（HttpServletResponse接口的实现类的一个实例）
	服务会依据请求路径（url  协议://ip:port/appname/请求名?参数名1=参数值1&参数名2=参数值2）
	查看web.xml找的对应的Servlet，并调用其中的service方法
	并将服务器创建的request和response对象传给service方法
	service方法中可以获得请求中的数据
	做业务处理
	并且提供视图响应（如html）
	服务器根据response对象生成响应结果给客户端（浏览器）




Http协议
	hypertext transport protocal
	超文本传输协议
	定义了浏览器于web服务器之间数据传输过程与数据格式
	无状态协议

	传输过程
		浏览器向服务器发送连接请求
		浏览器与服务器之间建立连接
		浏览器向服务器发送请求数据
		服务器处理请求，并发送回应
		服务器关闭连接
		浏览器如果需要再次发送请求数据，需要重新建立新的连接
	
	数据格式
		请求格式
			请求行 字符编码只有ISO8859-1
				请求方式（get/post）
				请求路径
				协议版本号 1.0/1.1

			若干个消息头
				消息头，值的是浏览器于服务器之间约定的一些通信规则
				有w3c定义
				如浏览器本身的信息，cookies，语言等

			实体内容
				存放请求数据（请求方式是post请求）

		响应格式
			协议的版本号
			状态码
				200
					正确执行
				404
					资源不存在
				500
					程序出错
			实体类容



t_emp
	id name salary
	1  aaa  123123


get请求没有请求体

GET /web/sayHello?name=aaa HTTP/1.1


Host: 127.0.0.1:8081
User-Agent: Mozilla/5.0 (Windows NT 5.1; rv:29.0) Gecko/20100101 Firefox/29.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-us,zh-cn;q=0.8,zh;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Connection: keep-alive



HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Content-Length: 20
Date: Wed, 03 Sep 2014 07:56:51 GMT






PATH=$PATH:$CATALINA_HOME/bin

/opt
	jdk6 .bin
	拷贝到主目录

	chmod 777 *.bin
	./jdk6  .bin

初始化文件
主目录下
cd
vi .bash_profile
	JAVA_HOME=jdk安装目录
	CATALINA_HOME=tomcat安装目录
	PATH=$PATH:$CATALINA_HOME/bin
	export JAVA_HOME
	export CATALINA_HOME
	export PATH


:wq
source .bash_profile

echo $CATALINA_HOME
echo $JAVA_HOME








J2EE

jdk1.5		产品名jdk5.0
JAVAEE

程序员的工作
	榨取别的程序员的工资


public static void close(rs,ps,con){
	if(rs!=null){
		rs.close();
	}
	if(ps!=null){
		ps.close();
	}
	if(con!=null){
		con.close();
	}
}
3

0.5

3000/30


100/200

System.out.println("xxxx")

